// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @map("_id") @default(auto()) @db.ObjectId
  firstName String
  lastName  String
  email     String   @unique
  password  String
  properties Property[] 
  role      Role     @default(USER)
  status    Status   @default(ACTIVE)
  otp       String?
  otpExpire DateTime?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

}

enum Role {
  USER
  ADMIN
}

enum Status {
  ACTIVE
  INACTIVE
}

enum Type{
  sell 
  rent
}

model Pro_type {
  id         String     @id @default(auto()) @map("_id") @db.ObjectId
  name       String
  properties Property[] @relation("PropertyType") // Unique relation name
  status     Status     @default(ACTIVE) 
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt  
}

model Property {
  id          String   @id @map("_id") @default(auto()) @db.ObjectId
  name        String
  address     String
  city        String
  state       String
  zipcode     String
  price       Int      // Ensure this is an Int
  description String
  type        Type
  area        Int      // Ensure area is an Int
  rooms       Int      // Ensure rooms is an Int
  contactNo   String   // Phone number for property contact
  proTypeId   String   @db.ObjectId  // Foreign key to a property type model
  proType     Pro_type @relation("PropertyType",fields: [proTypeId], references: [id]) // Use the same unique relation name
  userId      String   @db.ObjectId
  user        User     @relation(fields: [userId], references: [id]) 
  images      ProImg[]
  status      Status   @default(ACTIVE) 
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt 
}

model ProImg {
  id        String   @id @map("_id") @default(auto()) @db.ObjectId
  proId     String   @db.ObjectId
  property  Property @relation(fields: [proId], references: [id]) // Corrected to 'property' for clarity
  images    String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt 
}


